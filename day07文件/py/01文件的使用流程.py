# 工程目录：c:\Users\bin\OneDrive\share\pywork\day07文件\01文件的使用流程.py
# 创建日期: 2019.03.17
# 工程目标：文件的使用流程
# 创建作者：binyang
# -*- coding:utf-8 -*-

# 文件的使用流程
    # 打开 open("文件", "模式")
        #文件：指的是文件的路径，
        #模式：指的是文件的操作模式

    # 读写 定位，读，写，
    # 关闭 操作完成后关闭文件

# 程序中通过管道操作文件即，文件句柄
    # 管道有不同的类型 只写，只读，可读写

'''
python file 定义方法

open() 函数常用形式是接收两个参数：文件名(file)和模式(mode)。

open(file, mode='r')
完整的语法格式为：
open(file, mode='r', buffering=-1, encoding=None, errors=None, 
newline=None, closefd=True, opener=None)

参数说明:
file:       必需，文件路径（相对或者绝对路径）。
mode:       可选，文件打开模式
buffering:  设置缓冲
encoding:   一般使用utf8
errors:     报错级别
newline:    区分换行符
closefd:    传入的file参数类型
opener:

详细参数:
mode    参数有：
t	    文本模式 (默认)。
x	    写模式，新建一个文件，如果该文件已存在则会报错。w
b	    二进制模式。
+	    打开一个文件进行更新(可读可写)。
U	    通用换行模式（不推荐）。
r	    以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。
rb	    以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。一般用于非文本文件如图片等。
r+	    打开一个文件用于读写。文件指针将会放在文件的开头。
rb+	    以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。一般用于非文本文件如图片等。
w	    打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
wb	    以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。
w+	    打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
wb+	    以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。
a	    打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。
ab	    以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。
a+	    打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。
ab+	    以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。

'''

#一般来说推荐以下方法：

#写
with open('test.txt', 'w', encoding='utf-8') as f:
    f.write('test')
#读
with open('test.txt', 'r', encoding='utf-8') as f:
    f.readlines()
# 执行完自动close，避免忘记关闭文件导致资源的占用。