# 工程目录：c:\Users\bin\OneDrive\share\pywork\day02\03数字 number.py
# 创建日期: 2019.02.13
# 工程目标：数字数据类型用于存储数值 
# 创建作者：binyang
# -*- coding:utf-8 -*-

import random
import math
# python3支持的数值类型

'''
int 整型 正负整数，不限大小
float 浮点型，正负小数 不限大小
complex 复数 a+bj 或者complex（a,b） 
'''

# Python 数字类型转换

'''
有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。

int(x) 将x转换为一个整数。

float(x) 将x转换到一个浮点数。

complex(x) 将x转换到一个复数，实数部分为 x，虚数部分为 0。

complex(x, y) 将 x 和 y 转换到一个复数，实数部分为 x，虚数部分为 y。x 和 y 是数字表达式。
'''

# 数字运算
'''
Python 数字运算
Python 解释器可以作为一个简单的计算器，您可以在解释器里输入一个表达式，它将输出表达式的值。
表达式的语法很直白： +, -, * 和 /

注意：
在不同的机器上浮点运算的结果可能会不一样。
在整数除法中，除法 / 总是返回一个浮点数，如果只想得到整数的结果，丢弃可能的分数部分，可以使用运算符 //
// 得到的并不一定是整数类型的数，它与分母分子的数据类型有关系
Python 可以使用 ** 操作来进行幂运算：
变量在使用前必须先"定义"（即赋予变量一个值,分配一个内存地址，即变量名），否则会出现错误：
不同类型的数混合运算时会将整数转换为浮点数
'''

# 数学函数

'''
数学函数

fabs()是不能直接访问的，需要导入 math 模块，通过静态对象调用该方法 imprt math  math.X()

函数	返回值 ( 描述 )
abs(x)	返回数字的绝对值，如abs(-10) 返回 10
ceil(x)	返回数字的上入整数，如math.ceil(4.1) 返回 5
cmp(x, y)

如果 x < y 返回 -1, 如果 x == y 返回 0, 如果 x > y 返回 1。 Python 3 已废弃 。使用 使用 (x>y)-(x<y) 替换。
exp(x)	返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045
fabs(x)	返回数字的绝对值，如math.fabs(-10) 返回10.0
floor(x)	返回数字的下舍整数，如math.floor(4.9)返回 4
log(x)	如math.log(math.e)返回1.0,math.log(100,10)返回2.0
log10(x)	返回以10为基数的x的对数，如math.log10(100)返回 2.0
max(x1, x2,...)	返回给定参数的最大值，参数可以为序列。
min(x1, x2,...)	返回给定参数的最小值，参数可以为序列。
modf(x)	返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。
pow(x, y)	x**y 运算后的值。
round(x [,n])	返回浮点数x的四舍五入值，如给出n值，则代表舍入到小数点后的位数。
sqrt(x)	返回数字x的平方根

关于新规定四舍五入的方法
其具体要求举例如下（以保留两位小数为例）：
要求保留位数的后一位如果是4，则舍去。例如5.214保留两位小数为5.21。
如果保留位数的后一位如果是6，则进上去。例如5.216保留两位小数为5.22。
如果保留位数的后一位如果是5，而且5后面不再有数，要根据应看尾数“5”的前一位决定是舍去还是进入: 如果是奇数则进入，如果是偶数则舍去。例如5.215保留两位小数为5.22； 5.225保留两位小数为5.22。
如果保留位数的后一位如果是5，而且5后面仍有数。例如5.2254保留两位小数为5.23，也就是说如果5后面还有数据，则无论奇偶都要进入。
按照四舍六入五成双规则进行数字修约时，也应像四舍五入规则那样，一次性修约到指定的位数，不可以进行数次修约，否则得到的结果也有可能是错误的

'''
# 数学函数 示例
print("-----  数学函数  示例-----")
print("round 四舍五入12.56保留一位有效位：",round(12.56,1))

# 随机数函数
'''
随机数可以用于数学，游戏，安全等领域中，还经常被嵌入到算法中，用以提高算法效率，并提高程序的安全性。
Python包含以下常用随机数函数：

fabs()是不能直接访问的，需要导入 math 模块，通过静态对象调用该方法 imprt random  random.X()

函数	描述
choice(seq)	从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。
randrange ([start,] stop [,step])	从指定范围内，按指定基数递增的集合中获取一个随机数，基数缺省值为1
random()	随机生成下一个实数，它在[0,1)范围内。
seed([x])	改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。
shuffle(lst)	将序列的所有元素随机排序
uniform(x, y)	随机生成下一个实数，它在[x,y]范围内。

'''
# 随机数函数示例
print("-----随机数函数示例-----")
list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]
print("choice 从序列中随机挑选元素：", random.choice(list1))
print("random 按照 指定范围随机生成元素：", random.randrange(0, 9, 1))

# 三角函数
'''
三角函数
Python包括以下三角函数：

s()是不能直接访问的，需要导入 math 模块，然后通过 math 静态对象调用该方法 import math   math.X()

注意：
x -- -1到1之间的数值。如果x是大于1，会产生一个错误

函数	描述
acos(x)	返回x的反余弦弧度值。
asin(x)	返回x的反正弦弧度值。
atan(x)	返回x的反正切弧度值。
atan2(y, x)	返回给定的 X 及 Y 坐标值的反正切值。
cos(x)	返回x的弧度的余弦值。
hypot(x, y)	返回欧几里德范数 sqrt(x*x + y*y)。
sin(x)	返回的x弧度的正弦值。
tan(x)	返回x弧度的正切值。
degrees(x)	将弧度转换为角度,如degrees(math.pi/2) ， 返回90.0
radians(x)	将角度转换为弧度
'''