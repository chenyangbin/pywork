# 工程目录：c:\Users\bin\OneDrive\share\pywork\day02\07元组.py
# 创建日期: 2019.02.14
# 工程目标：元组，元组圆括号（），元素只可添加，不可更改 tuple一旦初始化就不能修改
# 创建作者：binyang
# -*- coding:utf-8 -*-


# Python3 元组  tup1 = (X,X,...)
# Python 的元组与列表类似，不同之处在于元组的元素不能修改。

# 元组使用小括号，列表使用方括号。

# 元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可。


# 元组与字符串类似，下标索引从0开始，可以进行截取，组合等

# 注意 ：
# 元组中只包含一个元素时，需要在元素后面添加逗号，否则括号会被当作运算符使用
tup1 = (50,)


# 01创建空元组
tup1 = ()

# 02禁止修改元组元素
# 元组中的元素不可修改 ， 但是 ， 可以以元组为单位连接组合
tpu2 = (11, 22, 33, 44)
tup3 = ('a', 'b', 'c')

# 元组的访问和连接
print("访问元组tup2: ",tpu2)
print("访问元组元素tup2[X]：", tpu2[0])
print("tpu1和tup3元组连接", tup3 + tpu2)

# 删除元组
# 元组中的元素值是不允许删除的，但我们可以使用del语句来删除整个元组
del tup1

# 元组运算符
# 与字符串一样，元组之间可以使用 + 号和 * 号进行运算。这就意味着他们可以组合和复制，运算后会生成一个新的元组。
'''
Python表达式	                结果	                                描述
len((1, 2, 3))	                3	                                    计算元素个数
(1, 2, 3) + (4, 5, 6)	        (1, 2, 3, 4, 5, 6)	                    连接
('Hi!',) * 4	                ('Hi!', 'Hi!', 'Hi!', 'Hi!')	        复制
3 in (1, 2, 3)	                True	                                元素是否存在
for x in (1, 2, 3): print (x,)	1 2 3	                        迭代
'''

# 元组索引，截取
# 因为元组也是一个序列，所以我们可以访问元组中的指定位置的元素，也可以截取索引中的一段元素
'''
表达式	       结果	                    描述
L[2]	    'Runoob'	            读取第三个元素
L[-2]	    'Taobao'	            反向读取；读取倒数第二个元素
L[1:]	    ('Taobao', 'Runoob')	截取元素，从第二个开始后的所有元素。
'''

# 元组内置函数
'''
len(tup)   计算元组元素个数
max(tup)    返回元组元素最大值
min(tup)    返回元组元素最小值
tup(seq)    将元列表转换为元组
'''




